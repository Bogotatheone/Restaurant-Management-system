<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="dgvSno.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvid.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvproID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvQty.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvPrice.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dgvAmount.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="guna2MessageDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="txtSearch.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABhVJREFUeF7t
        nN1xGzcQx1WCS8gTj5MndxB34HSQPJPORB1EHdgdyB1QHUQdyB1QL5Zm8iJ24Owft6R5wB/3xfsAjvub
        2bFM3IHA7u0HcMe7MQzDMAzDMAzDMAzDMJLn7fb9u9e/1r+9bIq/Xzerf142q93Ltvj3XL5vVvdoe92u
        /8CxeqoxFP9tfn0viv4sin4SA/zoJTAWjHi7/kW7NbrgPMF5QLGnCr5AYFh4j36VUQcMod7wxpQ5rBR7
        GF2/2vBBSOlviOJZ/j2En7cRMcyn9QcdhoG43jI/iMKLB/GgWyiwLh8g7+AY6fdOznkkfTHZwUO1i+vk
        dbP+s9krigccp6f0osxJ8l3b1Tf+HUcp9jCmnnZdaNlKlKKyXX0doyqC5zR5zaUXQHaIV9wzRZRSPE5x
        lb58Wv0u34XcQ8ZwRUapNYbkBz2sEXgPFn5OxNu+b4uP2tSasqpbfaVjEVm8UcokSyd/aPIKKA9Kh0Gj
        eUcWgHp4J6B42p/IYo0SmzQSbV2uOK5N2LlM+uadMoSFpTOMv7hEDyWxqxrGiJWaZWUkoajj2iTWXxug
        eNanjOHpkn6TAxMiEz3ErmYoJnJOrcg5d9pFb+Lhq/iih+QNEjWbYCwMqDGavOKAZAwDQIFNC8WuoF/y
        nT+yX9HDzalyI9VUXXJ1grXJREphaxWZy5M25wnc3J8UJqrNFWLxu5Rp1ibnwOPku4Mkn23VFfMOpthY
        0nfSYW0yNCx0ZeslbDIIOdpcAZMMjsXVKaWoHjIb4p3Baj7LXCITCW4uscQbS/opGAPQ8UUurGTh+aB4
        0OYTsbAG79JDZgdjlDFVcgnGrM15IMoPkjlLhjSsRZL+nND9rkQ8uBUsJ2hTBeYdKcZn3VapjBMXnTan
        jbq4P/jgqo9MMghrqeCPFRedNqUNrnAy+CAn5BYGcFH549WmtGFVCQtDMkG/CjtoU5KwfJdF+UsHzspd
        7xgW1lKClr85JHbkAX/g2nSClcUsrKVE21CcHG1iLZvcnFskbViSQYLcwCaXejxetIf4q1/cOdSmZFm0
        QYBum9xB8Ld+nCw5G6QxqedItgbBIP2BT31zaQzYvFLPew56GzanjbgI4vnBhmkWF1q2rt2AzKHVhmmS
        +ANHotemLGEbpjlUhidYpZVDJRWDPw2T0XNadIMx16c1BFY5ZpUX9RGaygQQg7WZorlnJ8e9idyn4lEs
        XIkkvTNNYb9WqisT/aswFY9CQXI+Lie5PeQAaNyt+bmAtHsPpc0fo+Ed8NjquDJZfzBEqa2faQruICYQ
        o6l35FwxRia0Z/kBn5VeJQuwBIzBH2XK2DuOMC9B0tbmZJExkqcp815PObR68iaWTtJmOC9lYya3orNE
        JhjU8UiWKe4F0WKkHG/22z8nylqehq6kjBI1Rk7bJG2JJclUjBIzhkj0p3fZUzPpWXOKrI9iv/Jt/Ll2
        9tQZRWTSF8DgyufVlMoC7uO0os4oCGFjv2CsXPPUvmsliR8LTYoaJfgN308p9kMb5qchat9UVwlTGCcu
        EtcmoU0/XiaYONuErIooTxRxSSxvfCWHCsbiJ3D/HPSjTQ4cP2WYHR0tielCzBdVzu74spnjy2eO/Zxe
        RoM3ksIT3MsveV++SN/BOgPKZseK7FROn2FsMNZiKjKs6Ju9ZQwpHuuUiHZ+XlzmrBgHx8XsSQwjhmix
        UQjP6zOeRRkFuD2wcku+JvF3FvdKjq47tmaUM1yOkRIUeaaPUspzLt/Sl/zAdn+fkXtc/0FbKYs0io/z
        HlEwlMEE7UOusMvCw1d28YzP9ZDj1hD15qswypS4C8BTMgyvzSfMKBPBDIIwpc0VzCgTwRQcC4tmlAkQ
        j+h0k82MMjI8bJlRZgWJnCnXjDIj9A0UIn2NcnXb/GMwpFFwzvl6xujJoJ6S+G/0s6GPUcptIP+cdN+C
        lB2xfaxaowTHL+CJyJRAtRQqmRuF3/QygwxOnVGOlRSMIf8Pd40l9LlOjGGJGaVJsOjULoyh6W4UC1ej
        08Eoy31MNTW0vOWrcyfFoy0IJwYKL70FO8V4esXJF8sZhmEYhmEYhmEYhmEYI3Fz8z8gx4zTE0cCaQAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>